name: User-services Pipeline

on:
  push:
    paths:
      - 'services/users/**'
      - 'k8s/deployments/user-deployment.yaml'
      - 'k8s/services/user-service.yaml'
      - '.github/workflows/user-pipeline.yml'
      - 'k8s/hpa/user-hpa.yaml'

    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      RESOURCE_GROUP: briitzresourcegroup
      AKS_CLUSTER: briitzaks
      ACR_NAME: briitzacr

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


      - name: ACR Login
        run: az acr login --name $ACR_NAME


      - name: Build and push Docker image with SHA commit
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_NAME=$ACR_NAME.azurecr.io/microservices-users:$IMAGE_TAG
          docker build -t $IMAGE_NAME -f ./services/users/Dockerfile services/users
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV


      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest' 

        
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER --overwrite-existing


      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/services/user-service.yaml -n briitz
          kubectl apply -f k8s/deployments/user-deployment.yaml -n briitz
          kubectl set image deployment/user-deployment user=${{ env.IMAGE_NAME }} -n briitz
          kubectl rollout status deployment/user-deployment -n briitz